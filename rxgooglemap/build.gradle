buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'jacoco'

ext {
    PUBLISH_GROUP_ID = 'com.sdoward'
    PUBLISH_ARTIFACT_ID = 'rxgooglemaps'
    PUBLISH_VERSION = '1.1.1'
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 3
        versionName "0.3"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    lib_name: "RxGoogleMaps"
            ]
        }
    }
}

task ciBuild(dependsOn: ['assemble', 'testReleaseUnitTest', 'pmd', 'checkstyle', 'findbugs', 'coverage'])

task findbugs(type: FindBugs, group: 'staticAnalysis') {
    source = fileTree('src/main/java/')
    classpath = files()
    classes = fileTree('build/intermediates/classes/')
    excludeFilter = file("../config/findbugs_exclude.xml")
    effort = 'max'
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

task checkstyle(type: Checkstyle, group: 'staticAnalysis') {
    ignoreFailures false
    configFile file("../config/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}

pmd {
    ignoreFailures = false
    reportsDir = file("$project.buildDir/reports/pmd/")
}

task pmd(type: Pmd, group: 'staticAnalysis') {
    ruleSets = ["java-basic", "java-braces", "java-strings", "java-design", "java-unusedcode"]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = false
        html.enabled = true
    }
}


jacoco {
    toolVersion = "0.7.2.201409121644"
}

project.afterEvaluate {

    tasks.create(name: 'coverage', type: JacocoReport, dependsOn: 'testReleaseUnitTest') {
        group = "reporting"
        description = "Generate Jacoco coverage reports for the build."
        classDirectories = fileTree(
                dir: 'build/intermediates/classes/release',
                excludes: ['**/R.class',
                           '**/IndoorBuildingEvent.class',
                           '**/R$*.class',
                           '**/BuildConfig.*',
                           '**/Manifest*.*']
        )

        sourceDirectories = files('src/main/java')
        executionData = files('build/jacoco/testReleaseUnitTest.exec')

        reports {
            xml.enabled = true
            html.enabled = true
        }
    }
}

dependencies {

    def libraryDependencies = rootProject.ext.libraryDependencies

    compile libraryDependencies.googleMaps
    compile libraryDependencies.rxJava

    def libraryTestDependencies = rootProject.ext.libraryTestDependencies

    testCompile libraryTestDependencies.powermockCore
    testCompile libraryTestDependencies.powermockMockito
    testCompile libraryTestDependencies.powermockJunit

}

apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'
